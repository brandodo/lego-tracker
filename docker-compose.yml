version: "3.8" # Or your preferred Docker Compose version

services:
  db:
    image: postgres:17-alpine
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  lego-scraper-app: # Name of your service (you can change this)
    build:
      context: . # Path to the directory containing your Dockerfile (assuming it's in the same directory as docker-compose.yml)
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # Map host port 3000 to container port 3000 (adjust if your app uses a different port)
    volumes:
      - ./:/app # Mount the current directory (where docker-compose.yml is) to /app inside the container
      - /app/node_modules # IMPORTANT:  Exclude node_modules directory inside container to avoid conflicts
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      NODE_ENV: ${NODE_ENV}

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

volumes:
  postgres_data:
